plugins {
  id 'application'
  id 'com.palantir.git-version' version '0.15.0'
  id "me.champeau.jmh" version "0.6.6"
}

group 'com.whitemagicsoftware'

repositories {
  mavenCentral()
}

dependencies {
  // Command-line parsing
  implementation 'info.picocli:picocli:4.6.3'

  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
  testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.0'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

sourceSets {
  main {
    java {
      srcDirs = ["src/main/java"]
    }
  }
}

compileJava {
  options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
  options.compilerArgs.addAll(['--release', '17'])
}

application {
  applicationName = 'keenquotes'
  mainClassName = "com.whitemagicsoftware.${applicationName}.app.KeenQuotes"
}

version = gitVersion()

def resourceDir = sourceSets.main.resources.srcDirs[0]
final File propertiesFile = file("${resourceDir}/com/whitemagicsoftware/${applicationName}/app.properties")
propertiesFile.write("application.version=${version}")

jar {
  duplicatesStrategy = DuplicatesStrategy.EXCLUDE

  manifest {
    attributes 'Main-Class': mainClassName
  }

  from {
    (configurations.runtimeClasspath.findAll { !it.path.endsWith(".pom") }).collect {
      it.isDirectory() ? it : zipTree(it)
    }
  }

  archiveFileName = "${applicationName}.jar"

  exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
}

task lib(type: Jar) {
  archiveFileName = "${applicationName}.jar"
  destinationDirectory = file("$buildDir/lib")

  from "$buildDir/classes/java/main"
  exclude "**/KeenQuotes.class"
}

lib.configure {
  dependsOn compileJava
}

tasks.named('test') {
  useJUnitPlatform()
}
